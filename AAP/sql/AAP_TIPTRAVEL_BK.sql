--Fatec Barueri
--Empresa TipTravel
--4 Semestre GTI
--AMYR HASSAN CRIMINELLI DE OLIVEIRA
--MONIELLY APARECIDA TELES DE SOUZA
--RAIANI CARLA GUERRA LIMA
--VICTOR HUGO RIBEIRO DE CARVALHO
--VINICIUS AGUILAR LOPES

-- ---------------------------------------------------------------------------------------------------------

-- CODIGO SQL

-- CRIAR O BANCO DE DADOS

CREATE DATABASE IF NOT EXISTS TESTE;

-- TABELA USUARIO

CREATE TABLE IF NOT EXISTS USUARIO 
(
    ID_USUARIO INT(8) NOT NULL AUTO_INCREMENT,
    NOME VARCHAR(45),
    CONTATOS VARCHAR(45),
    ID_DADOS_DE_USUARIO integer, 
    ID_PERFIL integer,

    PRIMARY KEY (ID_USUARIO) 
);

-- TABELA DADOS DE USUARIO
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS DADOS_DE_USUARIO 
(
    ID_DADOS_DE_USUARIO INT NOT NULL AUTO_INCREMENT,
    SENHA INT(12),
    NOME VARCHAR(45),
    TELEFONE INT(11),
    EMAIL VARCHAR(45),
    IDADE INT(2),
    CPF INT(11),
    ENDERECO VARCHAR(115),
    ID_USUARIO integer,

    PRIMARY KEY (ID_DADOS_DE_USUARIO)
);


-- TABELA PERFIL
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS PERFIL 
(
    ID_PERFIL INT(8) NOT NULL AUTO_INCREMENT,
    ID_USUARIO integer,
    ID_POST integer,
    ID_GOSTOS  integer,
    FOTO LONGBLOB NOT NULL,

    PRIMARY KEY (ID_PERFIL)
);

-- TABELA TIP TRAVEL
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS TIPTRAVEL 
(
    ID_TIPTRAVEL INT NOT NULL AUTO_INCREMENT,
    EMAIL VARCHAR(45),
    TELEFONE INT(11),
    ENDERECO VARCHAR(115),
    DESCRICAO VARCHAR(45),

    PRIMARY KEY (ID_TIPTRAVEL)

);

-- TABELA PARCEIROS
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS PARCEIROS 
(
    ID_PARCEIROS INT NOT NULL AUTO_INCREMENT,
    CNPJ VARCHAR(45),
    EMAIL VARCHAR(45),
    TELEFONE INT(11),
    ENDERECO VARCHAR(115),
    DESCRICAO VARCHAR(45),
    ID_SERVICO integer,

    PRIMARY KEY (ID_PARCEIROS)

);

-- TABELA PEDIDO
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS PEDIDO
(
    ID_PEDIDO INT NOT NULL AUTO_INCREMENT,
    ID_TIPTRAVEL integer,
    ID_USUARIO integer,

    PRIMARY KEY (ID_PEDIDO)
);

-- TABELA SERVICOS
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS SERVICO
(
    ID_SERVICO INT NOT NULL AUTO_INCREMENT,
    DESCRICAO VARCHAR(45),
    ID_PEDIDO integer,

    PRIMARY KEY (ID_SERVICO)

);

-- TABELA POST
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS POST
(
    ID_POST INT NOT NULL AUTO_INCREMENT,
    DESCRICAO VARCHAR(435),
    LOCALS VARCHAR(85),
    IMAGEM LONGBLOB NOT NULL,
    ID_SERVICO integer,
    ID_PERFIL integer,

    PRIMARY KEY (ID_POST)
);

-- TABELA GOSTOS
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS GOSTOS
(
    ID_GOSTOS INT NOT NULL AUTO_INCREMENT,
    DESCRICAO VARCHAR(45),
    ID_PERFIL integer,

    PRIMARY KEY (ID_GOSTOS)
);

-- TABELA FEED
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS FEED
(
    ID_POST integer,
    ID_GOSTOS integer,
    ID_PARCEIROS integer
);

-- TABELA DE IMAGENS 
-- ---------------------------------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS IMAGENS
(
    ID_IMAGENS INT(10) NOT NULL AUTO_INCREMENT,
    EVENTO VARCHAR(50) NOT NULL,
    DESCRICAO VARCHAR(255) NOT NULL,
    NOME_IMAGEM VARCHAR(25) NOT NULL,
    TAMANHO_IMAGEM VARCHAR(25) NOT NULL,
    TIPO_IMAGEM VARCHAR(25) NOT NULL,
    IMAGEM LONGBLOB NOT NULL,

    PRIMARY KEY (ID_IMAGENS)


);
CREATE TABLE IF NOT EXISTS AMIGOS 
(
    ID_AMIGOS INT(8) NOT NULL AUTO_INCREMENT,
    ID_PERFIL integer,
    ID_AMIGO integer,


    PRIMARY KEY (ID_AMIGOS) 
);
CREATE TABLE IF NOT EXISTS NOTIFICACAO 
(
    ID_NOTIFICACAO INT(8) NOT NULL AUTO_INCREMENT,
    ID_PARA integer,
    ID_DE integer,
    TIPO VARCHAR(45),


    PRIMARY KEY (ID_NOTIFICACAO) 
);

-- ALTERANDO TABELAS E ADICIONANDO CHAVES EXTRANGEIRAS:

ALTER TABLE DADOS_DE_USUARIO ADD CONSTRAINT FK_USUARIO_ID_DADOSUSUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) ;

ALTER TABLE USUARIO ADD  CONSTRAINT FK_ID_USUARIODADOS_DE_USUARIO FOREIGN KEY (ID_DADOS_DE_USUARIO) REFERENCES DADOS_DE_USUARIO (ID_DADOS_DE_USUARIO);

ALTER TABLE PERFIL ADD   CONSTRAINT FK_ID_PERFILUSUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO);

ALTER TABLE USUARIO ADD   CONSTRAINT FK_ID_USUARIOPERFIL FOREIGN KEY (ID_PERFIL) REFERENCES PERFIL (ID_PERFIL);

ALTER TABLE PEDIDO ADD  CONSTRAINT FK_ID_PEDIDOTIPTRAVEL FOREIGN KEY (ID_TIPTRAVEL) REFERENCES TIPTRAVEL (ID_TIPTRAVEL);

ALTER TABLE PEDIDO ADD   CONSTRAINT FK_ID_PEDIDOUSUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO);

ALTER TABLE PARCEIROS ADD   CONSTRAINT FK_ID_PARCEIROSSERVICO FOREIGN KEY (ID_SERVICO) REFERENCES SERVICO (ID_SERVICO);

ALTER TABLE SERVICO ADD  CONSTRAINT FK_PEDIDO_SERVICOUSUARIO FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO (ID_USUARIO);

ALTER TABLE POST ADD  CONSTRAINT FK_ID_POSTSERVICO FOREIGN KEY (ID_SERVICO) REFERENCES SERVICO (ID_SERVICO);

ALTER TABLE PERFIL ADD  CONSTRAINT FK_ID_PERFILPOST FOREIGN KEY (ID_POST) REFERENCES POST (ID_POST);

ALTER TABLE GOSTOS ADD  CONSTRAINT FK_ID_GOSTOSPERFIL FOREIGN KEY (ID_PERFIL) REFERENCES PERFIL (ID_PERFIL);

ALTER TABLE PERFIL ADD  CONSTRAINT FK_ID_PERFILGOSTOS FOREIGN KEY (ID_GOSTOS) REFERENCES GOSTOS (ID_GOSTOS);

ALTER TABLE FEED ADD  CONSTRAINT FK_ID_FEEDPOST FOREIGN KEY (ID_POST) REFERENCES POST (ID_POST);

ALTER TABLE FEED ADD  CONSTRAINT FK_ID_FEEDGOSTOS FOREIGN KEY (ID_GOSTOS) REFERENCES  GOSTOS (ID_GOSTOS);

ALTER TABLE FEED ADD  CONSTRAINT FK_ID_FEEDPARCEIROS FOREIGN KEY (ID_PARCEIROS) REFERENCES  PARCEIROS(ID_PARCEIROS);
ALTER TABLE POST ADD  CONSTRAINT FK_ID_POSTPERFIL FOREIGN KEY (ID_PERFIL) REFERENCES  PERFIL(ID_PERFIL);

ALTER TABLE AMIGOS ADD  CONSTRAINT FK_ID_AMIGOSPERFIL FOREIGN KEY (ID_PERFIL) REFERENCES  PERFIL(ID_PERFIL);

ALTER TABLE AMIGOS ADD  CONSTRAINT FK_ID_AMIGOPERFIL FOREIGN KEY (ID_AMIGO) REFERENCES  PERFIL(ID_PERFIL);

ALTER TABLE NOTIFICACAO ADD  CONSTRAINT FK_ID_NOTIDADOS_DE_USUARIO FOREIGN KEY (ID_PARA) REFERENCES DADOS_DE_USUARIO (ID_DADOS_DE_USUARIO);

ALTER TABLE NOTIFICACAO ADD  CONSTRAINT FK_ID_NOTIDADOS_DE_USUARIO_DE FOREIGN KEY (ID_DE) REFERENCES DADOS_DE_USUARIO (ID_DADOS_DE_USUARIO);
